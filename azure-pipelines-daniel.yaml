# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- marcus

jobs:
- job: downloadPiper
  pool:
    vmImage: 'ubuntu-latest'
  container:
    image: ppiper/cf-cli
    options: -u 0
  steps:
  - checkout: none
  - task: Cache@2
    inputs:
      key: piper-go-official
      path: bin
      cacheHitVar: FOUND_PIPER
    displayName: Cache piper go binary
  - script: |
        mkdir -p bin
        curl -L --output bin/piper https://github.com/SAP/jenkins-library/releases/download/v1.73.0/piper
        chmod +x bin/piper
    condition: ne(variables.FOUND_PIPER, 'true')
    displayName: 'Download Piper'
  - script: bin/piper version
    displayName: 'Piper Version'
- job: piperMta
  dependsOn: downloadPiper
  pool:
    vmImage: 'ubuntu-latest'
  container:
    image: devxci/mbtci
    options: -u 0
  steps:
  - task: Cache@2
    inputs:
      key: piper-go-official
      path: bin
    displayName: resolve piper go binary from cache
  - script: |
      bin/piper version
      bin/piper mtaBuild
    displayName: 'Perform mta build'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: $(System.DefaultWorkingDirectory)/BAS_Sample_App.mtar
      artifactName: mtar
    displayName: 'Publish mtar'
- job: piperCfDeploy
  dependsOn: piperMta
  pool:
    vmImage: 'ubuntu-latest'
  container:
    image: ppiper/cf-cli
    options: -u 0
  steps:
  - checkout: none
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: mtar
  - task: Cache@2
    inputs:
      key: piper-go-official
      path: bin
    displayName: resolve piper go binary from cache
  - script: |
      bin/piper version
      mv $(Pipeline.Workspace)/BAS_Sample_App.mtar .
      bin/piper cloudFoundryDeploy --org 3346a69ctrial --space dev --username '$(USER)' --password '$(PASSWD)' --apiEndpoint $(DEPLOY_URI) --mtaPath BAS_Sample_App.mtar --deployTool mtaDeployPlugin
    displayName: 'Perform cf deploy'
